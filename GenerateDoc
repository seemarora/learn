// O(n + m) time | O(c) space
// where n is the length of the characters string
// m is the length of the document string
// c is the total number of unique characters in the characters string
public boolean generateDocument(String characters, String document) {
	HashMap<Character, Integer> map = new HashMap<>();
	for (int i = 0; i < characters.length(); i++) {
		char ch = characters.charAt(i);
		map.put(ch, 1 + (map.containsKey(ch) ? map.get(ch) : 0));
	}
	for (int i = 0; i < document.length(); i++) {
		char ch = document.charAt(i);
		if (!map.containsKey(ch)) return false;
		map.put(ch, map.get(ch) - 1);
		if (map.get(ch) == 0) {
			map.remove(ch);
		}
	}
	return true;
}

// Inefficient Solutions - 

// O(m * (n + m)) time | O(1) space
// Count the occurrence of every character in the document string
// and then see that it is <= the count of the same character in the characters string

// O(c * (n + m)) time | O(c) space
// where c is the total number of unique characters 
// Similar to previous solution but maintain a set of characters that have alredy
// been counted so we don 
